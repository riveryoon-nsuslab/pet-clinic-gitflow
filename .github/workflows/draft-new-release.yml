name: "Create draft Release or Hotfix Branch"

on:
  workflow_dispatch:
    inputs:
      branch_type:
        type: choice
        description: 'The branch type you want to make'
        required: true
        options:
          - release
          - hotfix
        default: 'release'
      version:
        type: string
        description: 'Name of version ( ie 5.5.0)'
        required: false

jobs:
  #draft-new-hotfix:
  #  name: "Draft a new hotfix"
  #  runs-on: ubuntu-latest
  #  permissions: write-all

  #  steps:
  #    - uses: actions/checkout@v3
#
#      - name: Create hotfix branch from master
#        run: git checkout -b hotfix-${{ inputs.version }} master

  draft-new-release:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      #- name: Checkout develop branch
      #  run: |
      #    git remote update
      #    git checkout develop

      - name: Create Draft Release
        id: draft-release
        uses: release-drafter/release-drafter@v5.24.0
        with:
          publish: false
          config-name: release-drafter-config.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create release branch with draft version
        run: git checkout -b ${{inputs.branch_type}}/${{ inputs.version || steps.draft-release.outputs.name }}
      
      
      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      - name: Update Changelog
        uses: stefanzweifel/changelog-updater-action@v1
        with:
          latest-version: ${{ steps.draft-release.outputs.name }}
          release-notes: ${{ steps.draft-release.outputs.body }}

      - name: Commit updated CHANGELOG.md
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: ${{inputs.branch_type}}/${{ inputs.version || steps.draft-release.outputs.name }}
          commit_message: Update CHANGELOG
          file_pattern: CHANGELOG.md
          create_branch: true
          push_options: '--force'

      # - name: Create Release
      #   run: |
      #     git add .
      #     git commit -m "Update CHANGELOG"
      #     git push origin release/${{ inputs.version || steps.draft-release.outputs.name }}

      - name: Create pull request
        uses: thomaseizinger/create-pull-request@1.3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          head: ${{inputs.branch_type}}/${{ inputs.version || steps.draft-release.outputs.name }}
          base: master
          title: Merge ${{inputs.branch_type}} version ${{steps.draft-release.outputs.name }} into master
          reviewers: ${{ github.actor }} # By default, we request a review from the person who triggered the workflow.
          # Write a nice message to the user.
          # We are claiming things here based on the `publish-new-release.yml` workflow.
          # You should obviously adopt it to say the truth depending on your release workflow :)
          body: |
            # Merge the PR into master @${{ github.actor }}!

            이 PR은 https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}에서 릴리스 워크플로의 수동 트리거에 대한 응답으로 생성되었습니다.
            이 커밋에서 변경 로그를 업데이트하고 매니페스트 파일의 버전을 변경했습니다.

            이 PR을 병합하면 GitHub 릴리스가 생성되고 릴리스 빌드의 일부로 생성된 모든 자산이 업로드됩니다.